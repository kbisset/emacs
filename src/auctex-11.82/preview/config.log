This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by preview-latex configure 11.82, which was
generated by GNU Autoconf 2.59.  Invocation command line was

  $ ./configure --prefix=/Users/kbisset/emacs/auctex-11.82 --prefix=/Users/kbisset/emacs/auctex-11.82 --with-emacs=/Applications/Emacs.app/Contents/MacOS/Emacs --with-lispdir=/Users/kbisset/emacs/auctex-11.82/lisp --cache-file=/dev/null --srcdir=.

## --------- ##
## Platform. ##
## --------- ##

hostname = kbisset.bioinformatics.vt.edu
uname -m = Power Macintosh
uname -r = 8.3.0
uname -s = Darwin
uname -v = Darwin Kernel Version 8.3.0: Mon Oct  3 20:04:04 PDT 2005; root:xnu-792.6.22.obj~2/RELEASE_PPC

/usr/bin/uname -p = powerpc
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
hostinfo               = Mach kernel version:
	 Darwin Kernel Version 8.3.0: Mon Oct  3 20:04:04 PDT 2005; root:xnu-792.6.22.obj~2/RELEASE_PPC
Kernel configured for a single processor only.
1 processor is physically available.
Processor type: ppc970 (PowerPC 970)
Processor active: 0
Primary memory available: 2.00 gigabytes
Default processor set: 137 tasks, 398 threads, 1 processors
Load average: 6.59, Mach factor: 0.14
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/simsci/share/bin
PATH: /Users/kbisset/bin
PATH: /Users/kbisset/software/emacs/bin
PATH: /sw/bin
PATH: /sw/sbin
PATH: /bin
PATH: /sbin
PATH: /usr/bin
PATH: /usr/sbin
PATH: /usr/X11R6/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1276: checking whether make sets $(MAKE)
configure:1296: result: yes
configure:1343: checking for a BSD-compatible install
configure:1398: result: /usr/bin/install -c
configure:1465: checking for /Applications/Emacs.app/Contents/MacOS/Emacs
configure:1495: result: /Applications/Emacs.app/Contents/MacOS/Emacs
configure:1512: checking if /Applications/Emacs.app/Contents/MacOS/Emacs is XEmacs
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((x (if (featurep (quote xemacs)) "yes" "no"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19789"))
Wrote /Users/kbisset/emacs/src/auctex-11.82/preview/conftest-19789
=> no
configure:1534: result: no
configure:1538: checking for Emacs prefix
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((cmd(pop command-line-args-left))(x (condition-case nil (let*
    ((prefix (directory-file-name (file-name-directory (executable-find cmd))))
     (parent (directory-file-name (file-name-directory prefix))))
    (if (string= (file-name-nondirectory prefix) "bin")
        (setq prefix parent)
      (if (string= (file-name-nondirectory parent) "bin")
         (setq prefix (directory-file-name (file-name-directory parent)))))
    prefix) (error NONE)))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19789")) /Applications/Emacs.app/Contents/MacOS/Emacs
Wrote /Users/kbisset/emacs/src/auctex-11.82/preview/conftest-19789
=> /Applications/Emacs.app/Contents/MacOS
configure:1557: result: "/Applications/Emacs.app/Contents/MacOS"
configure:1589: checking if Emacs is recent enough
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((x (cond ((< emacs-major-version 21) "no")
			 ((> emacs-major-version 21) "yes")
			 ((< emacs-minor-version 01) "no")
			 (t "yes")))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19789"))
Wrote /Users/kbisset/emacs/src/auctex-11.82/preview/conftest-19789
=> yes
configure:1603: result: yes
configure:1646: checking if build directory is valid
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -eval (let* ((x (if (or (member (directory-file-name default-directory) load-path)	      (member (file-name-as-directory default-directory) load-path))	 "no" "yes"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19789"))
Wrote /Users/kbisset/emacs/src/auctex-11.82/preview/conftest-19789
=> yes
configure:1664: result: yes
configure:1752: checking where lisp files go
configure:1827: result: /Users/kbisset/emacs/auctex-11.82/lisp
configure:1831: checking what file to use for preview startup
configure:1858: result: /Users/kbisset/emacs/auctex-11.82/lisp/preview-latex.el
configure:1874: checking where the package lisp files go
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19789")) /Users/kbisset/emacs/auctex-11.82/lisp/auctex /Users/kbisset/emacs/auctex-11.82/lisp /Users/kbisset/emacs/auctex-11.82/lisp/preview-latex.el
Wrote /Users/kbisset/emacs/src/auctex-11.82/preview/conftest-19789
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:1955: result: /Users/kbisset/emacs/auctex-11.82/lisp/auctex
configure:1958: checking where the data files go
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19789")) /Users/kbisset/emacs/auctex-11.82/lisp/auctex /Users/kbisset/emacs/auctex-11.82/lisp /Users/kbisset/emacs/auctex-11.82/lisp/preview-latex.el
Wrote /Users/kbisset/emacs/src/auctex-11.82/preview/conftest-19789
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:2039: result: /Users/kbisset/emacs/auctex-11.82/lisp/auctex
configure:2042: checking where the info files go
configure:2044: result: ${prefix}/info
configure:2051: checking for the location of AUCTeX's tex-site.el
configure:2105: result: ..
configure:2117: checking for gs
configure:2133: found /sw/bin/gs
configure:2143: result: gs
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((dir(pop command-line-args-left))(x (if (string= dir "gs") "" `(defvar preview-gs-command ,dir)))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19789")) gs
Wrote /Users/kbisset/emacs/src/auctex-11.82/preview/conftest-19789
=> 
configure:2178: checking for latex
configure:2196: found /sw/bin/latex
configure:2209: result: /sw/bin/latex
configure:2227: checking for pdflatex
configure:2245: found /sw/bin/pdflatex
configure:2257: result: /sw/bin/pdflatex
configure:2275: checking for tex
configure:2306: result: /sw/bin/tex
configure:2417: checking for prefix from kpsepath
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((cmd(pop command-line-args-left))(x (condition-case nil (let*
    ((prefix (directory-file-name (file-name-directory (executable-find cmd))))
     (parent (directory-file-name (file-name-directory prefix))))
    (if (string= (file-name-nondirectory prefix) "bin")
        (setq prefix parent)
      (if (string= (file-name-nondirectory parent) "bin")
         (setq prefix (directory-file-name (file-name-directory parent)))))
    prefix) (error NONE)))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19789")) kpsepath
Wrote /Users/kbisset/emacs/src/auctex-11.82/preview/conftest-19789
=> /sw
configure:2441: result: "/sw"
configure:2444: checking for TDS-compliant directory
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((prefix(pop command-line-args-left)) (expanded(pop command-line-args-left)) (pathoutput(pop command-line-args-left))(x (catch 22
       (let (reldir (dirs (mapcar (lambda(x)
              (and (string-match "\\`!*\\(.*\\)/tex/latex//+\\'" x)
	           (match-string 1 x)))
      (append (split-string pathoutput ";")
             (split-string pathoutput ":")))))
	  (dolist (name (list nil) "NONE")
	    (dolist (dir dirs)
	      (when (and dir
	      	         (setq dir (directory-file-name dir))
                         (file-name-absolute-p dir)
	      	         (file-directory-p dir)
	                 (not (string-match "\\`\\.\\."
                           (setq reldir (file-relative-name dir expanded))))
			 (not (file-name-absolute-p reldir))
                         (let ((name name) (dir dir))
		           (while (and dir name
		                       (string= (file-name-nondirectory dir)
		                                (file-name-nondirectory name))
                              (setq dir (file-name-directory dir)
				   name (file-name-directory name))
			      (if (and dir name)
			         (setq dir (directory-file-name dir)
			              name (directory-file-name name)))))
		            (null name))
		   (throw 22
                      (if (string= reldir ".") (directory-file-name prefix)
                        (concat (file-name-as-directory prefix)
                                reldir))))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19789")) ${datadir}/texmf /Users/kbisset/emacs/auctex-11.82/share/texmf .:!!/Users/kbisset/.texmf-config/tex/latex//:!!/Users/kbisset/.texmf-var/tex/latex//:/Users/kbisset/Library/texmf/tex/latex//:!!/sw/etc/texmf-config/tex/latex//:!!/sw/var/lib/texmf/tex/latex//:!!/sw/share/texmf/tex/latex//:!!/sw/share/texmf-local/tex/latex//:!!/sw/share/texmf-dist/tex/latex//:!!/Users/kbisset/.texmf-config/tex/generic//:!!/Users/kbisset/.texmf-var/tex/generic//:/Users/kbisset/Library/texmf/tex/generic//:!!/sw/etc/texmf-config/tex/generic//:!!/sw/var/lib/texmf/tex/generic//:!!/sw/share/texmf/tex/generic//:!!/sw/share/texmf-local/tex/generic//:!!/sw/share/texmf-dist/tex/generic//:!!/Users/kbisset/.texmf-config/tex///:!!/Users/kbisset/.texmf-var/tex///:/Users/kbisset/Library/texmf/tex///:!!/sw/etc/texmf-config/tex///:!!/sw/var/lib/texmf/tex///:!!/sw/share/texmf/tex///:!!/sw/share/texmf-local/tex///:!!/sw/share/texmf-dist/tex///
Wrote /Users/kbisset/emacs/src/auctex-11.82/preview/conftest-19789
=> NONE
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((prefix(pop command-line-args-left)) (expanded(pop command-line-args-left)) (pathoutput(pop command-line-args-left))(x (catch 22
       (let (reldir (dirs (mapcar (lambda(x)
              (and (string-match "\\`!*\\(.*\\)/tex/latex//+\\'" x)
	           (match-string 1 x)))
      (append (split-string pathoutput ";")
             (split-string pathoutput ":")))))
	  (dolist (name (list nil) "NONE")
	    (dolist (dir dirs)
	      (when (and dir
	      	         (setq dir (directory-file-name dir))
                         (file-name-absolute-p dir)
	      	         (file-directory-p dir)
	                 (not (string-match "\\`\\.\\."
                           (setq reldir (file-relative-name dir expanded))))
			 (not (file-name-absolute-p reldir))
                         (let ((name name) (dir dir))
		           (while (and dir name
		                       (string= (file-name-nondirectory dir)
		                                (file-name-nondirectory name))
                              (setq dir (file-name-directory dir)
				   name (file-name-directory name))
			      (if (and dir name)
			         (setq dir (directory-file-name dir)
			              name (directory-file-name name)))))
		            (null name))
		   (throw 22
                      (if (string= reldir ".") (directory-file-name prefix)
                        (concat (file-name-as-directory prefix)
                                reldir))))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19789")) /sw/share/texmf-local /sw/share/texmf-local .:!!/Users/kbisset/.texmf-config/tex/latex//:!!/Users/kbisset/.texmf-var/tex/latex//:/Users/kbisset/Library/texmf/tex/latex//:!!/sw/etc/texmf-config/tex/latex//:!!/sw/var/lib/texmf/tex/latex//:!!/sw/share/texmf/tex/latex//:!!/sw/share/texmf-local/tex/latex//:!!/sw/share/texmf-dist/tex/latex//:!!/Users/kbisset/.texmf-config/tex/generic//:!!/Users/kbisset/.texmf-var/tex/generic//:/Users/kbisset/Library/texmf/tex/generic//:!!/sw/etc/texmf-config/tex/generic//:!!/sw/var/lib/texmf/tex/generic//:!!/sw/share/texmf/tex/generic//:!!/sw/share/texmf-local/tex/generic//:!!/sw/share/texmf-dist/tex/generic//:!!/Users/kbisset/.texmf-config/tex///:!!/Users/kbisset/.texmf-var/tex///:/Users/kbisset/Library/texmf/tex///:!!/sw/etc/texmf-config/tex///:!!/sw/var/lib/texmf/tex///:!!/sw/share/texmf/tex///:!!/sw/share/texmf-local/tex///:!!/sw/share/texmf-dist/tex///
Wrote /Users/kbisset/emacs/src/auctex-11.82/preview/conftest-19789
=> /sw/share/texmf-local
configure:2651: result: /sw/share/texmf-local
configure:2772: checking for texhash
configure:2790: found /sw/bin/texhash
configure:2802: result: /sw/bin/texhash
configure:2811: checking for initexmf
configure:2837: result: /sw/bin/texhash
configure:2893: checking for glaring installation conflicts
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -eval (let* ((packagelispdir(pop command-line-args-left)) (previewstartfile(pop command-line-args-left))(x 
  (concat
    (and (setq tmp (locate-library "preview.elc"))
         (not (string= (file-truename tmp)
	               (file-truename (expand-file-name "preview.elc"
                                      packagelispdir))))
         (format "Conflicting previous installation in `%s' found!\n"
                 (file-name-directory tmp)))
    (and (setq tmp (locate-library "preview-latex.el"))
         (not (string= (file-truename tmp)
                       (file-truename previewstartfile)))
         (format "Conflicting previous startup file `%s' found!\n" tmp))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19789")) /Users/kbisset/emacs/auctex-11.82/lisp/auctex /Users/kbisset/emacs/auctex-11.82/lisp/preview-latex.el
Wrote /Users/kbisset/emacs/src/auctex-11.82/preview/conftest-19789
=> 
configure:2955: result: probably none
configure:3168: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by preview-latex config.status 11.82, which was
generated by GNU Autoconf 2.59.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on kbisset.bioinformatics.vt.edu

config.status:698: creating Makefile
config.status:698: creating auto.el
config.status:698: creating latex/Makefile

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_env_GS_set=
ac_cv_env_GS_value=
ac_cv_env_TEXHASH_set=
ac_cv_env_TEXHASH_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_path_EMACS=/Applications/Emacs.app/Contents/MacOS/Emacs
ac_cv_path_LATEX=/sw/bin/latex
ac_cv_path_PDFLATEX=/sw/bin/pdflatex
ac_cv_path_TEX=/sw/bin/tex
ac_cv_path_TEXHASH=/sw/bin/texhash
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_GS=gs
ac_cv_prog_TEXHASH=/sw/bin/texhash
ac_cv_prog_make_make_set=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

DEFS='-DPACKAGE_NAME=\"preview-latex\" -DPACKAGE_TARNAME=\"preview-latex\" -DPACKAGE_VERSION=\"11.82\" -DPACKAGE_STRING=\"preview-latex\ 11.82\" -DPACKAGE_BUGREPORT=\"bug-auctex@gnu.org\" '
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EMACS='/Applications/Emacs.app/Contents/MacOS/Emacs'
EMACS_FLAVOR='emacs'
GS='gs'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LATEX='/sw/bin/latex'
LIBOBJS=''
LIBS=''
LTLIBOBJS=''
PACKAGE_BUGREPORT='bug-auctex@gnu.org'
PACKAGE_NAME='preview-latex'
PACKAGE_STRING='preview-latex 11.82'
PACKAGE_TARNAME='preview-latex'
PACKAGE_VERSION='11.82'
PATH_SEPARATOR=':'
PDFLATEX='/sw/bin/pdflatex'
PLAT_LISP='prv-emacs.el'
SET_MAKE=''
SHELL='/bin/sh'
TEX='/sw/bin/tex'
TEXHASH='/sw/bin/texhash'
TEXMFGEN='preview.sty prauctex.def prauctex.cfg prshowbox.def prshowlabels.def prtracingall.def prtightpage.def prlyx.def prcounters.def prfootnotes.def'
XEMACS='no'
auctexdir='..'
bindir='${exec_prefix}/bin'
build_alias=''
datadir='${prefix}/share'
exec_prefix='${prefix}'
host_alias=''
includedir='${prefix}/include'
infodir='${prefix}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
lispGS=''
lispdir='/Users/kbisset/emacs/auctex-11.82/lisp'
lisppackagedatadir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisppackagelispdir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisppackagetexstyles=''
localstatedir='${prefix}/var'
mandir='${prefix}/man'
oldincludedir='/usr/include'
packagedatadir='/Users/kbisset/emacs/auctex-11.82/lisp/auctex'
packagedir='no'
packagelispdir='/Users/kbisset/emacs/auctex-11.82/lisp/auctex'
packagetexstyles=''
prefix='/Users/kbisset/emacs/auctex-11.82'
previewdocdir='/sw/share/texmf-local/doc/latex/styles'
previewstartfile='/Users/kbisset/emacs/auctex-11.82/lisp/preview-latex.el'
previewtexmfdir='/sw/share/texmf-local/tex/latex/preview'
program_transform_name='s,x,x,'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''
texmfdir='/sw/share/texmf-local'

## ----------- ##
## confdefs.h. ##
## ----------- ##

#define PACKAGE_BUGREPORT "bug-auctex@gnu.org"
#define PACKAGE_NAME "preview-latex"
#define PACKAGE_STRING "preview-latex 11.82"
#define PACKAGE_TARNAME "preview-latex"
#define PACKAGE_VERSION "11.82"

configure: exit 0
