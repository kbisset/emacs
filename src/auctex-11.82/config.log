This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by auctex configure 11.82, which was
generated by GNU Autoconf 2.59.  Invocation command line was

  $ ./configure --prefix=/Users/kbisset/emacs/auctex-11.82 --with-emacs=/Applications/Emacs.app/Contents/MacOS/Emacs --with-lispdir=/Users/kbisset/emacs/auctex-11.82/lisp

## --------- ##
## Platform. ##
## --------- ##

hostname = kbisset.bioinformatics.vt.edu
uname -m = Power Macintosh
uname -r = 8.3.0
uname -s = Darwin
uname -v = Darwin Kernel Version 8.3.0: Mon Oct  3 20:04:04 PDT 2005; root:xnu-792.6.22.obj~2/RELEASE_PPC

/usr/bin/uname -p = powerpc
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
hostinfo               = Mach kernel version:
	 Darwin Kernel Version 8.3.0: Mon Oct  3 20:04:04 PDT 2005; root:xnu-792.6.22.obj~2/RELEASE_PPC
Kernel configured for a single processor only.
1 processor is physically available.
Processor type: ppc970 (PowerPC 970)
Processor active: 0
Primary memory available: 2.00 gigabytes
Default processor set: 138 tasks, 405 threads, 1 processors
Load average: 5.34, Mach factor: 0.23
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /usr/local/simsci/share/bin
PATH: /Users/kbisset/bin
PATH: /Users/kbisset/software/emacs/bin
PATH: /sw/bin
PATH: /sw/sbin
PATH: /bin
PATH: /sbin
PATH: /usr/bin
PATH: /usr/sbin
PATH: /usr/X11R6/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1282: checking whether make sets $(MAKE)
configure:1302: result: yes
configure:1349: checking for a BSD-compatible install
configure:1404: result: /usr/bin/install -c
configure:1417: checking for date in ChangeLog
configure:1426: result: 2005-12-17
configure:1428: checking for release in ChangeLog
configure:1437: result: 11.82
configure:1492: checking for /Applications/Emacs.app/Contents/MacOS/Emacs
configure:1522: result: /Applications/Emacs.app/Contents/MacOS/Emacs
configure:1539: checking if /Applications/Emacs.app/Contents/MacOS/Emacs is XEmacs
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((x (if (featurep (quote xemacs)) "yes" "no"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19328"))
Wrote /Users/kbisset/emacs/src/auctex-11.82/conftest-19328
=> no
configure:1561: result: no
configure:1565: checking for Emacs prefix
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((cmd(pop command-line-args-left))(x (condition-case nil (let*
    ((prefix (directory-file-name (file-name-directory (executable-find cmd))))
     (parent (directory-file-name (file-name-directory prefix))))
    (if (string= (file-name-nondirectory prefix) "bin")
        (setq prefix parent)
      (if (string= (file-name-nondirectory parent) "bin")
         (setq prefix (directory-file-name (file-name-directory parent)))))
    prefix) (error NONE)))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19328")) /Applications/Emacs.app/Contents/MacOS/Emacs
Wrote /Users/kbisset/emacs/src/auctex-11.82/conftest-19328
=> /Applications/Emacs.app/Contents/MacOS
configure:1584: result: "/Applications/Emacs.app/Contents/MacOS"
configure:1616: checking if Emacs is recent enough
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((x (cond ((< emacs-major-version 21) "no")
			 ((> emacs-major-version 21) "yes")
			 ((< emacs-minor-version 01) "no")
			 (t "yes")))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19328"))
Wrote /Users/kbisset/emacs/src/auctex-11.82/conftest-19328
=> yes
configure:1630: result: yes
configure:1642: checking for mule support
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -eval (let* ((x (condition-case nil (require 'mule ) 	(error (prog1 nil (message "mule not found")))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19328"))
Wrote /Users/kbisset/emacs/src/auctex-11.82/conftest-19328
=> mule
configure:1676: result: yes
configure:1718: checking if build directory is valid
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -eval (let* ((x (if (or (member (directory-file-name default-directory) load-path)	      (member (file-name-as-directory default-directory) load-path))	 "no" "yes"))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19328"))
Wrote /Users/kbisset/emacs/src/auctex-11.82/conftest-19328
=> yes
configure:1736: result: yes
configure:1822: checking where lisp files go
configure:1897: result: /Users/kbisset/emacs/auctex-11.82/lisp
configure:1901: checking what file to use for auctex startup
configure:1928: result: /Users/kbisset/emacs/auctex-11.82/lisp/auctex.el
configure:1946: checking where the package lisp files go
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19328")) /Users/kbisset/emacs/auctex-11.82/lisp/auctex /Users/kbisset/emacs/auctex-11.82/lisp /Users/kbisset/emacs/auctex-11.82/lisp/tex-site.el
Wrote /Users/kbisset/emacs/src/auctex-11.82/conftest-19328
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:2027: result: /Users/kbisset/emacs/auctex-11.82/lisp/auctex
configure:2030: checking where the data files go
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19328")) /Users/kbisset/emacs/auctex-11.82/lisp/auctex /Users/kbisset/emacs/auctex-11.82/lisp /Users/kbisset/emacs/auctex-11.82/lisp/tex-site.el
Wrote /Users/kbisset/emacs/src/auctex-11.82/conftest-19328
=> (expand-file-name "auctex" (file-name-directory load-file-name))
configure:2111: result: /Users/kbisset/emacs/auctex-11.82/lisp/auctex
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19328"))  /Users/kbisset/emacs/auctex-11.82/lisp /Users/kbisset/emacs/auctex-11.82/lisp/auctex.el tex-site.el
Wrote /Users/kbisset/emacs/src/auctex-11.82/conftest-19328
=> (expand-file-name "tex-site.el" (file-name-directory load-file-name))
configure:2188: checking where the info files go
configure:2190: result: ${prefix}/info
configure:2201: checking where automatically generated global style hooks go
configure:2211: result: ${localstatedir}/auctex
/Applications/Emacs.app/Contents/MacOS/Emacs -batch -no-site-file -eval (let* ((path(pop command-line-args-left)) (lispdir(pop command-line-args-left)) (startup(pop command-line-args-left)) (target(pop command-line-args-left))(x (progn (setq path (directory-file-name path))
  (if (or target
          (not (string= (car load-path) (directory-file-name (car load-path)))))
    (setq path (file-name-as-directory path)))
  (setq path (expand-file-name path lispdir))
  (setq startupdir (file-name-directory (expand-file-name startup lispdir)))
  (prin1-to-string
    (if (or (string-match "\\`\\.\\."
              (setq relname (file-relative-name startupdir lispdir)))
            (file-name-absolute-p relname)
	    (string-match "\\`\\.\\."
              (setq relname (file-relative-name path lispdir)))
 	    (file-name-absolute-p relname))
	  (concat path target)
	(cond (target
	       `(expand-file-name
                   ,(file-relative-name (concat path target) startupdir)
	           (file-name-directory load-file-name)))
              ((string= path startupdir)
	         '(file-name-directory load-file-name))
	      ((string= path (directory-file-name startupdir))
                 '(directory-file-name (file-name-directory load-file-name)))
              (t
	       `(expand-file-name
                   ,(file-relative-name path startupdir)
	           (file-name-directory load-file-name))))))))) (write-region (if (stringp x) x (prin1-to-string x)) nil "./conftest-19328")) /Users/kbisset/emacs/auctex-11.82/var/auctex /Users/kbisset/emacs/auctex-11.82/lisp /Users/kbisset/emacs/auctex-11.82/lisp/tex-site.el
Wrote /Users/kbisset/emacs/src/auctex-11.82/conftest-19328
=> "/Users/kbisset/emacs/auctex-11.82/var/auctex"
configure:2291: checking for tex
configure:2309: found /sw/bin/tex
configure:2322: result: /sw/bin/tex
configure:2331: checking for pdftex
configure:2349: found /sw/bin/pdftex
configure:2362: result: /sw/bin/pdftex
configure:2371: checking for dvips
configure:2389: found /sw/bin/dvips
configure:2402: result: /sw/bin/dvips
configure:2416: checking for perl
configure:2434: found /usr/bin/perl
configure:2447: result: /usr/bin/perl
configure:2460: checking for makeinfo
configure:2478: found /sw/bin/makeinfo
configure:2491: result: /sw/bin/makeinfo
configure:2500: checking for texi2html
configure:2518: found /sw/bin/texi2html
configure:2531: result: /sw/bin/texi2html
configure:2540: checking for texi2dvi
configure:2558: found /sw/bin/texi2dvi
configure:2571: result: /sw/bin/texi2dvi
configure:2580: checking for texi2pdf
configure:2598: found /sw/bin/texi2pdf
configure:2611: result: /sw/bin/texi2pdf
configure:2623: checking for install-info
configure:2641: found /sw/sbin/install-info
configure:2654: result: /sw/sbin/install-info
configure:2902: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by auctex config.status 11.82, which was
generated by GNU Autoconf 2.59.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on kbisset.bioinformatics.vt.edu

config.status:705: creating Makefile
config.status:705: creating tex-site.el.out
config.status:705: creating doc/Makefile
config.status:705: creating auctex.el
configure:3765: configuring in preview
configure:3882: running /bin/sh './configure' --prefix=/Users/kbisset/emacs/auctex-11.82  '--prefix=/Users/kbisset/emacs/auctex-11.82' '--with-emacs=/Applications/Emacs.app/Contents/MacOS/Emacs' '--with-lispdir=/Users/kbisset/emacs/auctex-11.82/lisp' --cache-file=/dev/null --srcdir=.

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_env_INSTALL_INFO_set=
ac_cv_env_INSTALL_INFO_value=
ac_cv_env_MAKEINFO_set=
ac_cv_env_MAKEINFO_value=
ac_cv_env_PERL_set=
ac_cv_env_PERL_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_path_DVIPS=/sw/bin/dvips
ac_cv_path_EMACS=/Applications/Emacs.app/Contents/MacOS/Emacs
ac_cv_path_INSTALL_INFO=/sw/sbin/install-info
ac_cv_path_MAKEINFO=/sw/bin/makeinfo
ac_cv_path_PDFTEX=/sw/bin/pdftex
ac_cv_path_PERL=/usr/bin/perl
ac_cv_path_TEX=/sw/bin/tex
ac_cv_path_TEXI2DVI=/sw/bin/texi2dvi
ac_cv_path_TEXI2HTML=/sw/bin/texi2html
ac_cv_path_TEXI2PDF=/sw/bin/texi2pdf
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_make_make_set=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

AUCTEXDATE='2005-12-17'
AUCTEXVERSION='11.82'
DEFS='-DPACKAGE_NAME=\"auctex\" -DPACKAGE_TARNAME=\"auctex\" -DPACKAGE_VERSION=\"11.82\" -DPACKAGE_STRING=\"auctex\ 11.82\" -DPACKAGE_BUGREPORT=\"bug-auctex@gnu.org\" '
DVIPS='/sw/bin/dvips'
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EMACS='/Applications/Emacs.app/Contents/MacOS/Emacs'
EMACS_FLAVOR='emacs'
HAVE_mule='yes'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_INFO='/sw/sbin/install-info'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
LIBOBJS=''
LIBS=''
LTLIBOBJS=''
MAKEINFO='/sw/bin/makeinfo'
MULEELC='tex-jp.elc'
MULESRC='tex-jp.el'
PACKAGE_BUGREPORT='bug-auctex@gnu.org'
PACKAGE_NAME='auctex'
PACKAGE_STRING='auctex 11.82'
PACKAGE_TARNAME='auctex'
PACKAGE_VERSION='11.82'
PATH_SEPARATOR=':'
PDFTEX='/sw/bin/pdftex'
PERL='/usr/bin/perl'
SET_MAKE=''
SHELL='/bin/sh'
TEX='/sw/bin/tex'
TEXI2DVI='/sw/bin/texi2dvi'
TEXI2HTML='/sw/bin/texi2html'
TEXI2PDF='/sw/bin/texi2pdf'
XEMACS='no'
auctexstartfile='/Users/kbisset/emacs/auctex-11.82/lisp/auctex.el'
autodir='${localstatedir}/auctex'
bindir='${exec_prefix}/bin'
build_alias=''
datadir='${prefix}/share'
exec_prefix='${prefix}'
host_alias=''
includedir='${prefix}/include'
infodir='${prefix}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
lispautodir='"/Users/kbisset/emacs/auctex-11.82/var/auctex"'
lispdir='/Users/kbisset/emacs/auctex-11.82/lisp'
lisppackagedatadir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisppackagelispdir='(expand-file-name "auctex" (file-name-directory load-file-name))'
lisptexsite='(expand-file-name "tex-site.el" (file-name-directory load-file-name))'
localstatedir='${prefix}/var'
mandir='${prefix}/man'
oldincludedir='/usr/include'
packagedatadir='/Users/kbisset/emacs/auctex-11.82/lisp/auctex'
packagedir='no'
packagelispdir='/Users/kbisset/emacs/auctex-11.82/lisp/auctex'
prefix='/Users/kbisset/emacs/auctex-11.82'
preview_enabled='yes'
program_transform_name='s,x,x,'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
subdirs=' preview'
sysconfdir='${prefix}/etc'
target_alias=''
texsite=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

#define PACKAGE_BUGREPORT "bug-auctex@gnu.org"
#define PACKAGE_NAME "auctex"
#define PACKAGE_STRING "auctex 11.82"
#define PACKAGE_TARNAME "auctex"
#define PACKAGE_VERSION "11.82"

configure: exit 0
