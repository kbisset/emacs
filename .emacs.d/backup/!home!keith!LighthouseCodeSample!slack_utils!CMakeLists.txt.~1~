cmake_minimum_required(VERSION 2.8.3)
project(slack_utils)
find_package(catkin_simple REQUIRED)
catkin_simple()
set(CMAKE_VERBOSE_MAKEFILE OFF)

# list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../cmake/")
# include(GetGitRevisionDescription)
# get_git_head_revision(GIT_REFSPEC GIT_SHA1)


find_package(Boost REQUIRED COMPONENTS thread filesystem system program_options chrono timer)
include_directories(${Boost_INCLUDE_DIRS})

# openssl for cpp-netlib
find_package(OpenSSL REQUIRED)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DBOOST_NETWORK_ENABLE_HTTPS")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DBOOST_ENABLE_ASSERT_HANDLER")

# configure_file("${CMAKE_CURRENT_SOURCE_DIR}/src/lib/GitSHA1.cpp.in" "${CATKIN_DEVEL_PREFIX}/GitSHA1.cpp" @ONLY)

cs_add_library(${PROJECT_NAME}
  src/lib/slack_utils.cpp
#  ${CATKIN_DEVEL_PREFIX}/GitSHA1.cpp
  )

target_link_libraries(${PROJECT_NAME}
  ${OpenSSL_LIBRARIES}
  ${Boost_LIBRARIES}
  gflags
  )


# cs_add_executable(sendslack
#   src/prog/sendslack.cpp
# )

# target_link_libraries(sendslack
#   ${PROJECT_NAME}
#   gflags
#   ${OpenSSL_LIBRARIES}
#   ${Boost_LIBRARIES}
# )

# cs_add_executable(printsha
#   src/prog/printsha.cpp
# )

# target_link_libraries(printsha
#   ${PROJECT_NAME}
# )

cs_export(INCLUDE_DIRS ${Boost_INCLUDE_DIRS}
  LIBRARIES ${Boost_LIBRARIES} ${OpenCV_LIBRARIES} ${OPENSSL_LIBRARIES})
