// Display classified video from each camera on a site.

#include "bag_of_tricks/flags.h"
#include "bag_of_tricks/sensorid.h"
#include "bag_of_tricks/sensor_site.h"
#include "bag_of_tricks/string.h"
#include "doorman_client/amqp_utils.h"
#include "doorman_client/doorman_utils.h"
#include "jarvis/track_publisher.h"
#include "threadpool11/pool.hpp"
#include "video_archive/va_reader.h"
#include <SimpleAmqpClient/SimpleAmqpClient.h>
#include <boost/locale/date_time.hpp>
#include <boost/locale/format.hpp>
#include <boost/locale/generator.hpp>
#include <gflags/gflags.h>
#include <mongo/bson/bson.h>
#include <mongo/client/dbclient.h>
#include <timer/profile.h>

#include <deque>
#include <string>
#include <malloc.h>
#include <unistd.h>
#include <tuple>
#include <cctype>
#include <ctime>

DEFINE_string(device1, "", "MAC address of first device");
DEFINE_string(device2, "", "MAC address of second device");
DEFINE_string(timestamp, "", "Timestamp to start viewing");

int main(int argc, char** argv)
{
  google::ParseCommandLineFlags(&argc, &argv, true);
  ros::Time::init();

  SensorId sensor1(FLAGS_device1);
  SensorId sensor2(FLAGS_device2);

getSegment(const std::string& method, uint64_t sensor_id, uint64_t* timestamp);
}
  
